"""DB Initial migration.

Revision ID: a3482a803eda
Revises: 
Create Date: 2023-08-28 23:46:46.729440

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a3482a803eda'
down_revision = None
branch_labels = None
depends_on = None

# ? creates all the tables 
def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('article_search_data')
    op.drop_table('article_search_docsize')
    op.drop_table('article_search_config')
    op.drop_table('article_search_idx')
    with op.batch_alter_table('article', schema=None) as batch_op:
        batch_op.alter_column('article_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)

    with op.batch_alter_table('article_authors', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.NUMERIC(),
               type_=sa.Integer(),
               nullable=False)
        batch_op.alter_column('article_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('article_search', schema=None) as batch_op:
        batch_op.add_column(sa.Column('rowid', sa.Integer(), nullable=False))

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=80),
               existing_nullable=True)
        batch_op.alter_column('description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('roles_user', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.drop_column('id')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('active',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=True)
        batch_op.create_unique_constraint(None, ['email'])

    # ### end Alembic commands ###


# ! removes all the tables 
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('active',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=True)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('user_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('roles_user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('id', sa.INTEGER(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('description',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=80),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('article_search', schema=None) as batch_op:
        batch_op.drop_column('rowid')

    with op.batch_alter_table('article_authors', schema=None) as batch_op:
        batch_op.alter_column('article_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(),
               nullable=True)

    with op.batch_alter_table('article', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('article_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('article_search_idx',
    sa.Column('segid', sa.NullType(), nullable=False),
    sa.Column('term', sa.NullType(), nullable=False),
    sa.Column('pgno', sa.NullType(), nullable=True),
    sa.PrimaryKeyConstraint('segid', 'term')
    )
    op.create_table('article_search_config',
    sa.Column('k', sa.NullType(), nullable=False),
    sa.Column('v', sa.NullType(), nullable=True),
    sa.PrimaryKeyConstraint('k')
    )
    op.create_table('article_search_docsize',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('sz', sa.BLOB(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article_search_data',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('block', sa.BLOB(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
